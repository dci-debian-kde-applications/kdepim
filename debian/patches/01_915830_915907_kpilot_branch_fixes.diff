--- a/kpilot/conduits/akonadibase/akonadirecord.cc
+++ b/kpilot/conduits/akonadibase/akonadirecord.cc
@@ -47,8 +47,13 @@
 	d->fItem = item;
 	d->fLastSyncDateTime = lastSync.toUTC(); // Item times are saved in UTC time.
 	d->fDeleted = false;
+	d->fDummy = false;
 }
 
+/**
+ * This ctor is _only_ used for dummy records which are temporarily used to delete
+ * data.
+ */
 AkonadiRecord::AkonadiRecord( const QString& id ) : d( new AkonadiRecordPrivate )
 {
 	d->fTempId = id;
@@ -122,6 +127,11 @@
 	d->fItem = item;
 	// Make sure that we return the right id after updating the itemobject.
 	setId( QString::number( item.id() ) );
+	/**
+	 * Assuming we're being passed a valid item to use, make sure fDummy
+	 * is not still false after this.
+	 */
+	setDummy( false );
 }
 
 void AkonadiRecord::synced()
--- a/kpilot/conduits/todo/todoconduit.cc
+++ b/kpilot/conduits/todo/todoconduit.cc
@@ -68,6 +68,7 @@
 	
 	TodoSettings::self()->readConfig();
 	d->fCollectionId = TodoSettings::akonadiCollection();
+	d->fPrevCollectionId = TodoSettings::prevAkonadiCollection();
 }
 
 bool TodoConduit::initDataProxies()
